{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\FALL-2023\\\\PSD\\\\Psd_Application\\\\Atom\\\\FRONT-END\\\\src\\\\components\\\\DoctorDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./css/DoctorDashboard.css\"; // Create a CSS file for styling\nimport { useNavigate } from \"react-router-dom\";\nimport { useDoctorAnswers } from \"./DoctorAnswersContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DoctorDashboard() {\n  _s();\n  // const navigate = useNavigate();\n  const {\n    addDoctorAnswer\n  } = useDoctorAnswers();\n\n  // Example data structure\n  const patientsData = [{\n    id: 1,\n    name: \"John Doe\",\n    queries: [{\n      id: 1,\n      question: \"How can I improve my health?\"\n    }, {\n      id: 2,\n      question: \"What should I do to reduce stress?\"\n    }]\n  }, {\n    id: 2,\n    name: \"Jane Smith\",\n    queries: [{\n      id: 3,\n      question: \"Is my diet plan suitable for my condition?\"\n    }, {\n      id: 4,\n      question: \"What exercises can I do for back pain?\"\n    }]\n  }\n  // Add more patient data as needed\n  ];\n\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  const [selectedQuery, setSelectedQuery] = useState(null);\n  const [answerSubmitted, setAnswerSubmitted] = useState(false);\n  const handlePatientClick = patient => {\n    setSelectedPatient(patient);\n    setSelectedQuery(null); // Clear selected query when selecting a new patient\n  };\n\n  const handleQueryClick = query => {\n    setSelectedQuery(query);\n  };\n  const handleAnswerSubmit = answer => {\n    // Handle submitting the answer to the backend or update state as needed\n    console.log(\"Submitted Answer:\", answer);\n    setAnswerSubmitted(true);\n    console.log(\"Submitted Answer:\", answer);\n    addDoctorAnswer(answer); // Add the answer to the context\n    setAnswerSubmitted(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Doctor Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doctor-dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"patients-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Available Patients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: patientsData.map(patient => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handlePatientClick(patient),\n            children: patient.name\n          }, patient.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"queries-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Selected Patient's Queries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), selectedPatient ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: selectedPatient.queries.map(query => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleQueryClick(query),\n            children: query.question\n          }, query.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a patient to view their queries.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"query-details\",\n        children: selectedQuery ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Query Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedQuery.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => {\n              e.preventDefault();\n              const answer = e.target.elements.answer.value;\n              handleAnswerSubmit(answer);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"answer\",\n              children: \"Your Answer:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"answer\",\n              name: \"answer\",\n              rows: \"4\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Submit Answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), answerSubmitted && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dialog-box\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Your answer has been submitted to the patient.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a query to view details and post an answer.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(DoctorDashboard, \"nKnNsHa9g97s60RJNdDfIlozjSU=\", false, function () {\n  return [useDoctorAnswers];\n});\n_c = DoctorDashboard;\nexport default DoctorDashboard;\nvar _c;\n$RefreshReg$(_c, \"DoctorDashboard\");","map":{"version":3,"names":["React","useState","useNavigate","useDoctorAnswers","jsxDEV","_jsxDEV","Fragment","_Fragment","DoctorDashboard","_s","addDoctorAnswer","patientsData","id","name","queries","question","selectedPatient","setSelectedPatient","selectedQuery","setSelectedQuery","answerSubmitted","setAnswerSubmitted","handlePatientClick","patient","handleQueryClick","query","handleAnswerSubmit","answer","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","onClick","onSubmit","e","preventDefault","target","elements","value","htmlFor","rows","required","type","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/FALL-2023/PSD/Psd_Application/Atom/FRONT-END/src/components/DoctorDashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./css/DoctorDashboard.css\"; // Create a CSS file for styling\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDoctorAnswers } from \"./DoctorAnswersContext\";\r\n\r\n\r\nfunction DoctorDashboard() {\r\n  // const navigate = useNavigate();\r\n    const { addDoctorAnswer } = useDoctorAnswers();\r\n\r\n\r\n  // Example data structure\r\n  const patientsData = [\r\n    {\r\n      id: 1,\r\n      name: \"John Doe\",\r\n      queries: [\r\n        { id: 1, question: \"How can I improve my health?\" },\r\n        { id: 2, question: \"What should I do to reduce stress?\" },\r\n      ],\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Jane Smith\",\r\n      queries: [\r\n        { id: 3, question: \"Is my diet plan suitable for my condition?\" },\r\n        { id: 4, question: \"What exercises can I do for back pain?\" },\r\n      ],\r\n    },\r\n    // Add more patient data as needed\r\n  ];\r\n\r\n  const [selectedPatient, setSelectedPatient] = useState(null);\r\n  const [selectedQuery, setSelectedQuery] = useState(null);\r\n  const [answerSubmitted, setAnswerSubmitted] = useState(false);\r\n\r\n  const handlePatientClick = (patient) => {\r\n    setSelectedPatient(patient);\r\n    setSelectedQuery(null); // Clear selected query when selecting a new patient\r\n  };\r\n\r\n  const handleQueryClick = (query) => {\r\n    setSelectedQuery(query);\r\n  };\r\n\r\n  const handleAnswerSubmit = (answer) => {\r\n    // Handle submitting the answer to the backend or update state as needed\r\n    console.log(\"Submitted Answer:\", answer);\r\n    setAnswerSubmitted(true);\r\n    console.log(\"Submitted Answer:\", answer);\r\n    addDoctorAnswer(answer); // Add the answer to the context\r\n    setAnswerSubmitted(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1>Doctor Dashboard</h1>\r\n      </div>\r\n\r\n      <div className=\"doctor-dashboard\">\r\n        {/* Available Patients List */}\r\n        <div className=\"patients-list\">\r\n          <h2>Available Patients</h2>\r\n          <ul>\r\n            {patientsData.map((patient) => (\r\n              <li key={patient.id} onClick={() => handlePatientClick(patient)}>\r\n                {patient.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        {/* Selected Patient's Queries */}\r\n        <div className=\"queries-list\">\r\n          <h2>Selected Patient's Queries</h2>\r\n          {selectedPatient ? (\r\n            <ul>\r\n              {selectedPatient.queries.map((query) => (\r\n                <li key={query.id} onClick={() => handleQueryClick(query)}>\r\n                  {query.question}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p>Select a patient to view their queries.</p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Selected Query Details and Answer Form */}\r\n        <div className=\"query-details\">\r\n          {selectedQuery ? (\r\n            <>\r\n              <h2>Query Details</h2>\r\n              <p>{selectedQuery.question}</p>\r\n              <form\r\n                onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  const answer = e.target.elements.answer.value;\r\n                  handleAnswerSubmit(answer);\r\n                }}>\r\n                <label htmlFor=\"answer\">Your Answer:</label>\r\n                <textarea id=\"answer\" name=\"answer\" rows=\"4\" required />\r\n                <button type=\"submit\">Submit Answer</button>\r\n              </form>\r\n              {/* Dialog box to show the answer submission */}\r\n              {answerSubmitted && (\r\n                <div className=\"dialog-box\">\r\n                  <p>Your answer has been submitted to the patient.</p>\r\n                  {/* You can add additional content or close button here */}\r\n                </div>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <p>Select a query to view details and post an answer.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DoctorDashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}